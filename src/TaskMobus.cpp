#include "TaskMobus.h"

HardwareSerial RS485(1);

// / Lệnh bật từng relay
uint8_t relayOnCommands[6][8] = {
    {0x01, 0x05, 0x00, 0x00, 0xFF, 0x00, 0x8C, 0x3A}, // CH1 ON - FF là giá trị ON
    {0x06, 0x05, 0x00, 0x02, 0x55, 0x00, 0x52, 0xED}, // CH2 ON
    {0x06, 0x05, 0x00, 0x03, 0x55, 0x00, 0x03, 0x2D}, // CH3 ON
    {0x06, 0x05, 0x00, 0x04, 0x55, 0x00, 0xB2, 0xEC}, // CH4 ON
    {0x06, 0x05, 0x00, 0x05, 0x55, 0x00, 0xE3, 0x2C}, // CH5 ON
    {0x06, 0x05, 0x00, 0x06, 0x55, 0x00, 0x13, 0x2C}  // CH6 ON
};

// Lệnh tắt từng relay (giống lệnh bật)
uint8_t relayOffCommands[6][8] = {
    {0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0xCD, 0xCA}, // CH1 OFF - 00 là giá trị OFF
    {0x06, 0x05, 0x00, 0x02, 0x55, 0x00, 0x52, 0xED}, // CH2 ON
    {0x06, 0x05, 0x00, 0x03, 0x55, 0x00, 0x03, 0x2D}, // CH3 ON
    {0x06, 0x05, 0x00, 0x04, 0x55, 0x00, 0xB2, 0xEC}, // CH4 ON
    {0x06, 0x05, 0x00, 0x05, 0x55, 0x00, 0xE3, 0x2C}, // CH5 ON
    {0x06, 0x05, 0x00, 0x06, 0x55, 0x00, 0x13, 0x2C}  // CH6 ON
};

void stateRS485(int i, bool state)
{
    Serial.print("Relay ");
        Serial.print(i + 1);
        Serial.println(state ? " ON" : " OFF");
        
        // Gửi lệnh
        RS485.write(state ? relayOnCommands[i] : relayOffCommands[i], 8);
        RS485.flush(); // Đảm bảo dữ liệu được gửi hết
        
        // Chờ một khoảng thời gian cho quá trình truyền hoàn tất
        delay(10);
}

void setupRS485()
{
    // Khởi tạo UART cho RS485 - thử với tốc độ baud 9600 phổ biến
    RS485.begin(9600, SERIAL_8N1, 15, 16);
    
    // Xóa bất kỳ dữ liệu buffer nào còn sót lại
    while(RS485.available()) {
        RS485.read();
    }
}