// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.5.1
// LVGL version: 8.3.6
// Project name: Squareline
#include "ui.h"
#include "WiFi.h"
#include <Arduino.h>
#include <WiFi.h>
#include <Wire.h>
#include <PubSubClient.h>
#include <ArduinoJson.h>
#include "../../../src/TaskMobus.h"

void setUPWF(const char *ssid, const char *password)
{

	WiFi.begin(ssid, password);
	int retry = 0;

	while (WiFi.status() != WL_CONNECTED && retry < 20)
	{
		delay(500);
		retry++;
	}

	if (WiFi.status() == WL_CONNECTED)
	{
		Serial.println("Kết nối thành công");
		Serial.print("Địa chỉ IP: ");
		Serial.println(WiFi.localIP());
		delay(1500); // Đợi 1.5s trước khi chuyển màn hình
		_ui_screen_change(&ui_mainScreen, LV_SCR_LOAD_ANIM_MOVE_LEFT, 500, 0, &ui_mainScreen_screen_init);
	}
	else
	{
		Serial.println("Kết nối thất bại");
		delay(1500); // Đợi 1.5s trước khi
					 // ẩn thông báo này
		_ui_screen_change(&ui_mainScreen, LV_SCR_LOAD_ANIM_MOVE_LEFT, 500, 0, &ui_mainScreen_screen_init);
	}
}
void connectToWiFi(lv_event_t *e)
{
	char ssid[64];
	char password[64];

	strncpy(ssid, lv_textarea_get_text(ui_ImportName), sizeof(ssid));
	strncpy(password, lv_textarea_get_text(ui_ImportPass), sizeof(password));
	ssid[sizeof(ssid) - 1] = '\0';
	password[sizeof(password) - 1] = '\0';

	setUPWF(ssid, password);
}

void LvR_light1(lv_event_t *e)
{
	// Your code here
	lv_event_code_t code = lv_event_get_code(e);
	lv_obj_t *obj = lv_event_get_target(e);
	if (code == LV_EVENT_VALUE_CHANGED)
	{
		LV_UNUSED(obj);
		bool isOn = lv_obj_has_state(obj, LV_STATE_CHECKED);
		bool success = relayController.sendRelayCommand(1, isOn);
		if (!success)
		{
			Serial.println("Failed to send command for Light 1");
			return;
		}
		Serial.printf("Light 1: %s\n", isOn ? "ON" : "OFF");
	}
}

void LvR_light2(lv_event_t *e)
{
	// Your code here
	lv_event_code_t code = lv_event_get_code(e);
	lv_obj_t *obj = lv_event_get_target(e);
	if (code == LV_EVENT_VALUE_CHANGED)
	{
		LV_UNUSED(obj);
		bool isOn = lv_obj_has_state(obj, LV_STATE_CHECKED);
		bool success = relayController.sendRelayCommand(2, isOn);
		if (!success)
		{
			Serial.println("Failed to send command for Light 2");
			return;
		}
		Serial.printf("Light 2:%s\n", isOn ? "ON" : "OFF");
	}
}

void LvR_light3(lv_event_t *e)
{
	// Your code here
	lv_event_code_t code = lv_event_get_code(e);
	lv_obj_t *obj = lv_event_get_target(e);
	if (code == LV_EVENT_VALUE_CHANGED)
	{
		LV_UNUSED(obj);
		bool isOn = lv_obj_has_state(obj, LV_STATE_CHECKED);
		bool success = relayController.sendRelayCommand(3, isOn);
		if (!success)
		{
			Serial.println("Failed to send command for Light 3");
			return;
		}
		Serial.printf("Light 3:%s\n", isOn ? "ON" : "OFF");
	}
}

void LvR_fan1(lv_event_t *e)
{
	// Your code here
	// Your code here
	lv_event_code_t code = lv_event_get_code(e);
	lv_obj_t *obj = lv_event_get_target(e);
	if (code == LV_EVENT_VALUE_CHANGED)
	{
		LV_UNUSED(obj);
		bool isOn = lv_obj_has_state(obj, LV_STATE_CHECKED);
		bool success = relayController.sendRelayCommand(4, isOn);
		if (!success)
		{
			Serial.println("Failed to send command for Fan 1");
			return;
		}
		Serial.printf("Fan 1:%s\n", isOn ? "ON" : "OFF");
	}
}

void LvR_fan2(lv_event_t *e)
{
	// Your code here
	// Your code here
	lv_event_code_t code = lv_event_get_code(e);
	lv_obj_t *obj = lv_event_get_target(e);
	if (code == LV_EVENT_VALUE_CHANGED)
	{
		LV_UNUSED(obj);
		bool isOn = lv_obj_has_state(obj, LV_STATE_CHECKED);
		bool success = relayController.sendRelayCommand(5, isOn);
		if (!success)
		{
			Serial.println("Failed to send command for Fan 2");
			return;
		}
		Serial.printf("Fan 2:%s\n", isOn ? "ON" : "OFF");
	}
}

void LvR_air1(lv_event_t *e)
{
	// Your code here
	lv_event_code_t code = lv_event_get_code(e);
	lv_obj_t *obj = lv_event_get_target(e);
	if (code == LV_EVENT_VALUE_CHANGED)
	{
		LV_UNUSED(obj);
		bool isOn = lv_obj_has_state(obj, LV_STATE_CHECKED);
		bool success = relayController.sendRelayCommand(6, isOn);
		if (!success)
		{
			Serial.println("Failed to send command for Air 1");
			return;
		}
		Serial.printf("Air 1:%s\n", isOn ? "ON" : "OFF");
	}
}

void connect_btn_event_handler(lv_event_t *e)
{
	// Your code here
}
